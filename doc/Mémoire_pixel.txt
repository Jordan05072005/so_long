voir img : mémoire_pixel.png

-La mémoire est organisée de manière séquentielle.
-Chaque ligne (hauteur) est stockée consécutivement dans la mémoire.
-Chaque pixel (4 octets) suit immédiatement l’autre.

L'accès a un pixel en mémoire ce calcule donc avec l'offset :
	y * size_line + x * (bpp / 8)

Ici :
	y = Coordonnée y du pixel (x, y)
	x = Coordonnée x du pixel (x, y)
	size_line = Taille mémoire pour stockée (un espace mémoire vaux un octet) une ligne entière de pixelle
	bpp = Nombre de bit pour stockée un pixel : 8 * 4 -> RGBA et chaque valeur est entre 0 et 255 soit 8 bit || RGB -> 8 * 3 ...
	bpp / 8 = Taille mémoire pour stockée un pixel.

Exemple :
	Accés au pixel (2, 4) sur un image a 10 pixel de longeur en RGB

-> 4 * (10 * 8) + 2 * (24 / 8)

Pour copier les 4 espace mémoire (soit 4 * 8 = 32bit) d'un coup, on cast l'espace mémoire un unsigned int car ce type de données est stocké en 32bit.